#root {
  height: 100%; /* Set height of App to take up the full height of the screen */
  width: 100%; /* Set width of App to take up the full height of the screen */
  text-align: center;
}

/* Our main component, this takes up the full screen */
.App {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: nowrap;
  height: 100vh; /* Set height of App to take up the full height of the screen */
  width: 100vw; /* Set width of App to take up the full height of the screen */
  background-color: antiquewhite;
}

/* The app is split into 3 even columns */
.Column {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  flex-wrap: nowrap;
  height: 100vh; /* Set height of App to take up the full height of the screen */
  width: 33%;
}

/* At the top of each column is a header */
.Header {
  height: 2.5em; /* Set height of Header to 10em */
  width: 100%; /* Set width of Header to 100% to take up the full width of its column */
  padding: .5em;
  background-color: dimgray;
  color: white;
  font-weight: bold;
  box-sizing: border-box; /* Add box-sizing property to include padding within the width */
}

/* under the header is each columns components, 
   this takes up all the column space that is not the header */
.Left, .Right, .Center {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  flex-wrap: nowrap;
  max-height: 100%;
  width: 100%; /* Add this property to set width to 100% */
  overflow-y: auto; /* Add this property to enable vertical scrolling if content exceeds height */

}

/* This container holds modules for the Right Column so they load to a dynamic size */
.RightModule {
  flex: 1;
  display: flex;
  flex-direction: column;
  max-height: 50%;
  width: 100%; /* Add this property to set width to 100% */
}
